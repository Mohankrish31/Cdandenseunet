step 1: Prepare environment 
pip install torch torchvision lpips numpy Pillow tqdm matplotlib opencv-python scikit-image
step 2 : Intialize the model
model = CDANDenseUNet(in_channels=3,out_channels=3, base_channels=32, growth_rate=12,,output_range="01").to(device)
step 3: load the model parameters
model.load_state_dict(torch.load("cdan_denseunet_isp_weights.pth"))
Set the model to evaluation mode
model.eval()
step 5 : Make predictions on new image
with torch.no_grad():
    for fname in os.listdir(input_dir):
        if not fname.lower().endswith(('.png', '.jpg', '.jpeg')):
            continue
        img_path = os.path.join(input_dir, fname)
        inp = preprocess_image(img_path).to(device)
        out = model(inp)
step 6:
        out = torch.clamp(out.squeeze(0), 0, 1).cpu()
        if out.shape[0] == 1:
            out = out.repeat(3, 1, 1)
        out_img = to_pil_image(out)
